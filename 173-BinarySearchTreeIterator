public class BSTIterator {
    private Stack<TreeNode> stack = new Stack<TreeNode>();

    public BSTIterator(TreeNode root) {
        PushLeft(root);
    }
    
    private void PushLeft(TreeNode node) {
        while (node != null) {
            stack.Push(node);
            node = node.left;
        }
    }

    public int Next() {
        var node = stack.Pop();
        PushLeft(node.right);
        return node.val;
    }
    
    public bool HasNext() {
        return stack.Count > 0;
    }
}
